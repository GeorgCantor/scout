apply plugin: 'maven-publish'
apply plugin: 'signing'

def getRepositoryUsername() {
    return findProperty('OSSRH_USERNAME') ?: System.getenv('OSSRH_USERNAME') ?: ''
}

def getRepositoryPassword() {
    return findProperty('OSSRH_PASSWORD') ?: System.getenv('OSSRH_PASSWORD') ?: ''
}

def getSigningKeyId() {
    return findProperty('SIGNING_KEY_ID') ?: System.getenv('SIGNING_KEY_ID') ?: ''
}

def getSigningKey() {
    return findProperty('SIGNING_KEY') ?: System.getenv('SIGNING_KEY') ?: ''
}

def getSigningPassword() {
    return findProperty('SIGNING_PASSWORD') ?: System.getenv('SIGNING_PASSWORD') ?: ''
}

if (!project.tasks.findByName('sourcesJar')) {
    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource.srcDirs
    }
}

artifacts {
    archives dokkaJar
    archives sourcesJar
}

def OSSRepo = "oss.sonatype.org"

afterEvaluate {
    publishing {
        repositories {
            maven {
                name "snapshot"
                url = "https://$OSSRepo/content/repositories/snapshots"
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
            maven {
                name "staging"
                url = "https://$OSSRepo/service/local/staging/deploy/maven2"
                credentials {
                    username = getRepositoryUsername()
                    password = getRepositoryPassword()
                }
            }
        }
        publications {
            release(MavenPublication) {
                from components.java
                artifact sourcesJar
                artifactId = project.ext.artifact
            }
        }

        publications.all {
            artifact dokkaJar

            pom.withXml {
                def root = asNode()

                root.children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST

                    description "Scout â€“ fast and safe manual dependency injector for Kotlin and Android."
                    name project.ext.artifact
                    url "https://github.com/yandex/scout"
                    licenses {
                        license {
                            name "The Apache Software License, Version 2.0"
                            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        }
                    }
                    scm {
                        url "https://github.com/yandex/scout"
                        connection "scm:git:git://github.com/yandex/scout.git"
                        developerConnection "scm:git:git://github.com/yandex/scout.git"
                    }
                    developers {
                        developer {
                            id "acelost"
                            name "Alexander Mironychev"
                        }
                    }
                }
            }
        }
    }

    signing {
        useInMemoryPgpKeys(
            getSigningKeyId(),
            getSigningKey(),
            getSigningPassword(),
        )
        sign publishing.publications.release
    }
}
